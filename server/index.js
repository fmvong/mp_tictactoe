// importing modules
const express = require("express");
const http = require("http");       //import http from 'http.dart'; would write like this in dart
const mongoose = require("mongoose");

const app = express();
const port = process.env.PORT || 3000;
var server = http.createServer(app);
const Room = require("./models/room.js");

var io = require("socket.io")(server);

//middleware, between client and server
app.use(express.json());

const DB = "mongodb+srv://colo:test1234@cluster0.iy89ow9.mongodb.net/?retryWrites=true&w=majority";
//const DB = "mongodb+srv://rivaan:test123@cluster0.rmhtu.mongodb.net/myFirstDatabase?retryWrites=true&w=majority";

//if there is conection -> "Client connected will be printed
io.on("connection", (socket) => {
    console.log("Client connected");
    socket.on("createRoom", async ({ nickname }) => {
        console.log(nickname);
        //console.log(socket.id);
        try{
            // room is created
            let room = new Room();
            //player is stored in the room
            let player = {
                socketID: socket.id,
                nickname: nickname,
                playerType: 'X',
            };
            room.players.push(player);
            room.turn = player;
            room = await room.save();   //save to mongoDB

            const roomId = room._id.toString();     //id generated by mongoDB
            socket.join(roomId);        //we emit to only one of the simultaneous games
            //socket ->send data to yourself
            //io -> send data to everyone
            io.to(roomId).emit("createRoomSuccess", room);

            //player is taken to the next screen
        } catch (e) {
            console.log(e);
        }
    });
});

mongoose
    .connect(DB)
    .then(() => {
        console.log("Connected to database");
    }).catch((e) => {
        console.log(e);
    });
//promise in JS = future in Dart /using then

server.listen(port, '0.0.0.0', () => {
    console.log(`Server started and running on port ${port}`);
});